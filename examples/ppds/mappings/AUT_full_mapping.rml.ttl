@prefix rr: <http://www.w3.org/ns/r2rml#> .
@prefix rml: <http://semweb.mmlab.be/ns/rml#> .
@prefix ql: <http://semweb.mmlab.be/ns/ql#> .
@prefix locn: <http://www.w3.org/ns/locn#> .
@prefix dct: <http://purl.org/dc/terms/> .
@prefix tedm: <http://data.europa.eu/a4g/mapping/sf-rml/> .
@prefix epo: <http://data.europa.eu/a4g/ontology#> .
@prefix epd: <http://data.europa.eu/a4g/resource/> .
@prefix cccev: <http://data.europa.eu/m8g/> .
@prefix org: <http://www.w3.org/ns/org#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix cc: <http://creativecommons.org/ns#> .
@prefix dc: <http://purl.org/dc/elements/1.1/> .
@prefix foaf: <http://xmlns.com/foaf/0.1/> .
@prefix owl: <http://www.w3.org/2002/07/owl#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix schema: <https://schema.org/> .
@prefix skos: <http://www.w3.org/2004/02/skos/core#> .
@prefix vann: <http://purl.org/vocab/vann/> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .
@prefix epo: <http://data.europa.eu/a4g/ontology#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix time: <http://www.w3.org/2006/time#> .


tedm:Notice a rr:TriplesMap ;
    rml:logicalSource [
        rml:source "%1$s" ;
        rml:referenceFormulation ql:XPath ;
        rml:iterator "/%2$s"
    ];

    rr:subjectMap [
        rr:template "http://data.europa.eu/a4g/resource/id_{replace(OBJECT_CONTRACT/REFERENCE_NUMBER, '[^a-zA-Z0-9]', '-')}-{replace(CONTRACTING_BODY/ADDRESS_CONTRACTING_BODY/NATIONALID, '[^a-zA-Z0-9]', '-')}_Notice" ;
        rr:class epo:Notice
    ];

    rr:predicateObjectMap [
        rr:predicate dct:publisher ;
        rr:objectMap [
            rr:constant "%3$s" ;
        ]
    ].

tedm:Procedure a rr:TriplesMap ;
    rml:logicalSource [
        rml:source "%1$s" ;
        rml:referenceFormulation ql:XPath ;
        rml:iterator "/%2$s/OBJECT_CONTRACT"
    ];

    rr:subjectMap [
        rr:template "http://data.europa.eu/a4g/resource/id_{replace(REFERENCE_NUMBER, '[^a-zA-Z0-9]', '-')}-{replace(../CONTRACTING_BODY/ADDRESS_CONTRACTING_BODY/NATIONALID, '[^a-zA-Z0-9]', '-')}_Procedure_{generate-id(REFERENCE_NUMBER)}" ;
        rr:class epo:Procedure
    ].

tedm:ProcedureIdentifier a rr:TriplesMap ;
    rml:logicalSource [
        rml:source "%1$s" ;
        rml:referenceFormulation ql:XPath ;
        rml:iterator "/%2$s/OBJECT_CONTRACT/REFERENCE_NUMBER"
    ];

    rr:subjectMap [
        rr:template "http://data.europa.eu/a4g/resource/id_{replace(., '[^a-zA-Z0-9]', '-')}-{replace(../../CONTRACTING_BODY/ADDRESS_CONTRACTING_BODY/NATIONALID, '[^a-zA-Z0-9]', '-')}_ProcedureIdentifier_{generate-id(.)}" ;
        rr:class epo:Identifier
    ].

tedm:AccessTerm a rr:TriplesMap ;
    rml:logicalSource [
        rml:source "%1$s" ;
        rml:referenceFormulation ql:XPath ;
        rml:iterator "/%2$s/CONTRACTING_BODY/DOCUMENT_FULL | /%2$s/CONTRACTING_BODY/DOCUMENT_RESTRICTED"
    ];

    rr:subjectMap [
        rr:template "http://data.europa.eu/a4g/resource/id_{replace(../../OBJECT_CONTRACT/REFERENCE_NUMBER, '[^a-zA-Z0-9]', '-')}-{replace(../ADDRESS_CONTRACTING_BODY/NATIONALID, '[^a-zA-Z0-9]', '-')}_AccessTerm_{generate-id(../../OBJECT_CONTRACT/REFERENCE_NUMBER)}" ;
        rr:class epo:AccessTerm
    ].

tedm:SubmissionTerm a rr:TriplesMap ;
    rml:logicalSource [
        rml:source "%1$s" ;
        rml:referenceFormulation ql:XPath ;
        rml:iterator "/%2$s/PROCEDURE"
    ];

    rr:subjectMap [
        rml:reference "if(exists(DATETIME_RECEIPT_TENDERS) or exists(../CONTRACTING_BODY/URL_PARTICIPATION)) then 'http://data.europa.eu/a4g/resource/id_' || replace(../OBJECT_CONTRACT/REFERENCE_NUMBER, '[^a-zA-Z0-9]', '-') || '-' || replace(../CONTRACTING_BODY/ADDRESS_CONTRACTING_BODY/NATIONALID, '[^a-zA-Z0-9]', '-') || '_SubmissionTerm_' || generate-id(../OBJECT_CONTRACT/REFERENCE_NUMBER) else null" ;
        rr:class epo:SubmissionTerm
    ].

tedm:ContractTermProcedure a rr:TriplesMap ;
    rml:logicalSource [
        rml:source "%1$s" ;
        rml:referenceFormulation ql:XPath ;
        rml:iterator "/%2$s//TYPE_CONTRACT/@CTYPE"
    ];

    rr:subjectMap [
        rr:template "http://data.europa.eu/a4g/resource/id_{replace(/%2$s/OBJECT_CONTRACT/REFERENCE_NUMBER, '[^a-zA-Z0-9]', '-')}-{replace(/%2$s/CONTRACTING_BODY/ADDRESS_CONTRACTING_BODY/NATIONALID, '[^a-zA-Z0-9]', '-')}_ContractTermProcedure_{generate-id(.)}" ;
        rr:class epo:ContractTerm
    ].

# tedm:ContractTermProcedure a rr:TriplesMap ;
#     rml:logicalSource [
#         rml:source "%1$s" ;
#         rml:iterator "/%2$s/LEFTI" ;
#         rml:referenceFormulation ql:XPath
#     ];

#     rr:subjectMap [
#         rml:reference "if(exists(RESTRICTED_SHELTERED_PROGRAM)) then 'http://data.europa.eu/a4g/resource/id_' || replace(../OBJECT_CONTRACT/REFERENCE_NUMBER, '[^a-zA-Z0-9]', '-') || '-' || replace(../CONTRACTING_BODY/ADDRESS_CONTRACTING_BODY/NATIONALID, '[^a-zA-Z0-9]', '-') || '_ContractTermProcedure_' || generate-id(.) else null" ;
#         rr:class epo:ContractTerm
#     ].

tedm:Lot a rr:TriplesMap ;
    rml:logicalSource [
        rml:source "%1$s" ;
        rml:referenceFormulation ql:XPath ;
        rml:iterator "/%2$s/OBJECT_CONTRACT/REFERENCE_NUMBER"
    ];

    rr:subjectMap [
        rr:template "http://data.europa.eu/a4g/resource/id_{replace(., '[^a-zA-Z0-9]', '-')}-{replace(../../CONTRACTING_BODY/ADDRESS_CONTRACTING_BODY/NATIONALID, '[^a-zA-Z0-9]', '-')}_Lot_{generate-id(.)}" ;
        rr:class epo:Lot
    ].

tedm:ContractTermLot a rr:TriplesMap ;
    rml:logicalSource [
        rml:source "%1$s" ;
        rml:referenceFormulation ql:XPath ;
        rml:iterator "/%2$s/OBJECT_CONTRACT/REFERENCE_NUMBER"
    ];

    rr:subjectMap [
        rml:reference "if(exists(../OBJECT_DESCR/NUTS/@CODE) or exists(../OBJECT_DESCR/MAIN_SITE/P) or exists(../OBJECT_DESCR/DATE_START) or exists(../OBJECT_DESCR/DATE_END) or exists(../OBJECT_DESCR/DURATION)) then 'http://data.europa.eu/a4g/resource/id_' || replace(., '[^a-zA-Z0-9]', '-') || '-' || replace(../../CONTRACTING_BODY/ADDRESS_CONTRACTING_BODY/NATIONALID, '[^a-zA-Z0-9]', '-') || '_ContractTermLot_' || generate-id(.) else null" ;
        rr:class epo:ContractTerm
    ].

tedm:ContractTermLotLocation a rr:TriplesMap ;
    rml:logicalSource [
        rml:source "%1$s" ;
        rml:referenceFormulation ql:XPath ;
        rml:iterator "/%2$s/OBJECT_CONTRACT/OBJECT_DESCR"
    ];

    rr:subjectMap [
        rml:reference "if(exists(NUTS) or exists(MAIN_SITE)) then 'http://data.europa.eu/a4g/resource/id_' || replace(../REFERENCE_NUMBER, '[^a-zA-Z0-9]', '-') || '-' || replace(../../CONTRACTING_BODY/ADDRESS_CONTRACTING_BODY/NATIONALID, '[^a-zA-Z0-9]', '-')||  '_ContractTermLotLocation_' || generate-id(.) else null" ;
        rr:class dct:Location
    ].

tedm:ContractTermLotLocationAddress a rr:TriplesMap ;
    rml:logicalSource [
        rml:source "%1$s" ;
        rml:iterator "/%2$s/OBJECT_CONTRACT/OBJECT_DESCR" ;
        rml:referenceFormulation ql:XPath
    ];

    rr:subjectMap [
        rml:reference "if(exists(MAIN_SITE)) then 'http://data.europa.eu/a4g/resource/id_' || replace(../REFERENCE_NUMBER, '[^a-zA-Z0-9]', '-') || '-' || replace(../../CONTRACTING_BODY/ADDRESS_CONTRACTING_BODY/NATIONALID, '[^a-zA-Z0-9]', '-') || '_ContractTermLotLocationAddress_' || generate-id(.) else null" ;
        rr:class locn:Address
    ].

tedm:ProcedurePurpose a rr:TriplesMap ;
    rml:logicalSource [
        rml:source "%1$s" ;
        rml:referenceFormulation ql:XPath ;
        rml:iterator "/%2$s/OBJECT_CONTRACT | /%2$s/MODIFICATIONS_CONTRACT/DESCRIPTION_PROCUREMENT"
    ];

    rr:subjectMap [
        rml:reference "if(exists(CPV_MAIN/CPV_CODE)) then 'http://data.europa.eu/a4g/resource/id_' || replace(/%2$s/OBJECT_CONTRACT/REFERENCE_NUMBER, '[^a-zA-Z0-9]', '-') || '-' || replace(/%2$s/CONTRACTING_BODY/ADDRESS_CONTRACTING_BODY/NATIONALID, '[^a-zA-Z0-9]', '-') || '_ProcedurePurpose_' || generate-id(.) else null" ;
        rr:class epo:Purpose
    ].

tedm:LotPurpose a rr:TriplesMap ;
    rml:logicalSource [
        rml:source "%1$s" ;
        rml:referenceFormulation ql:XPath ;
        rml:iterator "/%2$s/OBJECT_CONTRACT/OBJECT_DESCR"
    ];

    rr:subjectMap [
        rml:reference "if(exists(CPV_ADDITIONAL/CPV_CODE)) then 'http://data.europa.eu/a4g/resource/id_' || replace(../REFERENCE_NUMBER, '[^a-zA-Z0-9]', '-') || '-' || replace(../../CONTRACTING_BODY/ADDRESS_CONTRACTING_BODY/NATIONALID, '[^a-zA-Z0-9]', '-') || '_LotPurpose_' || generate-id(.) else null" ;
        rr:class epo:Purpose
    ].

tedm:Buyer a rr:TriplesMap ;
    rml:logicalSource [
        rml:source "%1$s" ;
        rml:referenceFormulation ql:XPath ;
        rml:iterator "/%2$s/CONTRACTING_BODY/ADDRESS_CONTRACTING_BODY"
    ];

    rr:subjectMap [
        rr:template "http://data.europa.eu/a4g/resource/id_{replace(../../OBJECT_CONTRACT/REFERENCE_NUMBER, '[^a-zA-Z0-9]', '-')}-{replace(NATIONALID, '[^a-zA-Z0-9]', '-')}_Buyer_{generate-id(NATIONALID)}" ;
        rr:class epo:Buyer
    ].

tedm:AdditionalBuyer a rr:TriplesMap ;
    rml:logicalSource [
        rml:source "%1$s" ;
        rml:referenceFormulation ql:XPath ;
        rml:iterator "/%2$s/CONTRACTING_BODY/ADDRESS_CONTRACTING_BODY_ADDITIONAL"
    ];

    rr:subjectMap [
        rr:template "http://data.europa.eu/a4g/resource/id_{replace(../../OBJECT_CONTRACT/REFERENCE_NUMBER, '[^a-zA-Z0-9]', '-')}-{replace(../ADDRESS_CONTRACTING_BODY/NATIONALID, '[^a-zA-Z0-9]', '-')}_AdditionalBuyer_{generate-id(NATIONALID)}" ;
        rr:class epo:Buyer
    ].

tedm:Organisation a rr:TriplesMap ;
    rml:logicalSource [
        rml:source "%1$s" ;
        rml:referenceFormulation ql:XPath ;
        rml:iterator "/%2$s/CONTRACTING_BODY/ADDRESS_CONTRACTING_BODY"
    ];

    rr:subjectMap [
        rr:template "http://data.europa.eu/a4g/resource/id_{replace(../../OBJECT_CONTRACT/REFERENCE_NUMBER, '[^a-zA-Z0-9]', '-')}-{replace(NATIONALID, '[^a-zA-Z0-9]', '-')}_Organisation_{generate-id(NATIONALID)}" ;
        rr:class org:Organization
    ].

tedm:AdditionalOrganisation a rr:TriplesMap ;
    rml:logicalSource [
        rml:source "%1$s" ;
        rml:referenceFormulation ql:XPath ;
        rml:iterator "/%2$s/CONTRACTING_BODY/ADDRESS_CONTRACTING_BODY_ADDITIONAL"
    ];

    rr:subjectMap [
        rr:template "http://data.europa.eu/a4g/resource/id_{replace(../../OBJECT_CONTRACT/REFERENCE_NUMBER, '[^a-zA-Z0-9]', '-')}-{replace(../ADDRESS_CONTRACTING_BODY/NATIONALID, '[^a-zA-Z0-9]', '-')}_Organisation_{generate-id(NATIONALID)}" ;
        rr:class org:Organization
    ].

tedm:OrganisationIdentifier a rr:TriplesMap ;
    rml:logicalSource [
        rml:source "%1$s" ;
        rml:referenceFormulation ql:XPath ;
        rml:iterator "/%2$s//NATIONALID"
    ];

    rr:subjectMap [
        rml:reference "if(not(.='')) then 'http://data.europa.eu/a4g/resource/id_' || replace(/%2$s/OBJECT_CONTRACT/REFERENCE_NUMBER, '[^a-zA-Z0-9]', '-') || '-' || replace(/%2$s/CONTRACTING_BODY/ADDRESS_CONTRACTING_BODY/NATIONALID, '[^a-zA-Z0-9]', '-') || '_OrganisationIdentifier_' || generate-id(.) else null" ;
        rr:class epo:Identifier
    ].

tedm:BuyerOrganisationGroup a rr:TriplesMap ;
    rml:logicalSource [
        rml:source "%1$s" ;
        rml:referenceFormulation ql:XPath ;
        rml:iterator "/%2$s/CONTRACTING_BODY/ADDRESS_CONTRACTING_BODY_ADDITIONAL[1]"
    ];

    rr:subjectMap [
        rr:template "http://data.europa.eu/a4g/resource/id_{replace(../../OBJECT_CONTRACT/REFERENCE_NUMBER, '[^a-zA-Z0-9]', '-')}-{replace(../ADDRESS_CONTRACTING_BODY/NATIONALID, '[^a-zA-Z0-9]', '-')}_BuyerOrganisationGroup_{generate-id(NATIONALID)}" ;
        rr:class epo:OrganisationGroup
    ].

tedm:ContactPoint a rr:TriplesMap ;
    rml:logicalSource [
        rml:source "%1$s" ;
        rml:iterator "/%2$s/CONTRACTING_BODY/ADDRESS_CONTRACTING_BODY" ;
        rml:referenceFormulation ql:XPath
    ];

    rr:subjectMap [
        rml:reference "if(exists(E_MAIL) or exists(PHONE) or exists(CONTACT)) then 'http://data.europa.eu/a4g/resource/id_' || replace(../../OBJECT_CONTRACT/REFERENCE_NUMBER, '[^a-zA-Z0-9]', '-') || '-' || replace(NATIONALID, '[^a-zA-Z0-9]', '-')||  '_ContactPoint_' || generate-id(.) else null" ;
        rr:class cccev:ContactPoint
    ].

tedm:AdditionalContactPoint a rr:TriplesMap ;
    rml:logicalSource [
        rml:source "%1$s" ;
        rml:iterator "/%2$s/CONTRACTING_BODY/ADDRESS_CONTRACTING_BODY_ADDITIONAL" ;
        rml:referenceFormulation ql:XPath
    ];

    rr:subjectMap [
        rml:reference "if(exists(E_MAIL) or exists(PHONE) or exists(CONTACT)) then 'http://data.europa.eu/a4g/resource/id_' || replace(../../OBJECT_CONTRACT/REFERENCE_NUMBER, '[^a-zA-Z0-9]', '-') || '-' || replace(../ADDRESS_CONTRACTING_BODY/NATIONALID, '[^a-zA-Z0-9]', '-')||  '_ContactPoint_' || generate-id(.) else null" ;
        rr:class cccev:ContactPoint
    ].

tedm:OrganisationAddress a rr:TriplesMap ;
    rml:logicalSource [
        rml:source "%1$s" ;
        rml:referenceFormulation ql:XPath ;
        rml:iterator "/%2$s/CONTRACTING_BODY/ADDRESS_CONTRACTING_BODY"
    ];

    rr:subjectMap [
        rr:template "http://data.europa.eu/a4g/resource/id_{replace(../../OBJECT_CONTRACT/REFERENCE_NUMBER, '[^a-zA-Z0-9]', '-')}-{replace(NATIONALID, '[^a-zA-Z0-9]', '-')}_OrganisationAddress_{generate-id(.)}" ;
        rr:class locn:Address
    ].

tedm:AdditionalOrganisationAddress a rr:TriplesMap ;
    rml:logicalSource [
        rml:source "%1$s" ;
        rml:referenceFormulation ql:XPath ;
        rml:iterator "/%2$s/CONTRACTING_BODY/ADDRESS_CONTRACTING_BODY_ADDITIONAL"
    ];

    rr:subjectMap [
        rr:template "http://data.europa.eu/a4g/resource/id_{replace(../../OBJECT_CONTRACT/REFERENCE_NUMBER, '[^a-zA-Z0-9]', '-')}-{replace(../ADDRESS_CONTRACTING_BODY/NATIONALID, '[^a-zA-Z0-9]', '-')}_OrganisationAddress_{generate-id(.)}" ;
        rr:class locn:Address
    ].

# tedm:SelectionCriterion a rr:TriplesMap ;
#     rml:logicalSource [
#         rml:source "%1$s" ;
#         rml:iterator "/%2$s/LEFTI" ;
#         rml:referenceFormulation ql:XPath
#     ];

#     rr:subjectMap [
#         rml:reference "if(exists(PARTICULAR_PROFESSION)) then 'http://data.europa.eu/a4g/resource/id_' || replace(../OBJECT_CONTRACT/REFERENCE_NUMBER, '[^a-zA-Z0-9]', '-') || '-' || replace(../CONTRACTING_BODY/ADDRESS_CONTRACTING_BODY/NATIONALID, '[^a-zA-Z0-9]', '-')||  '_SelectionCriterion_' || generate-id(.) else null" ;
#         rr:class epo:SelectionCriterion
#     ].

tedm:Duration a rr:TriplesMap ;
    rml:logicalSource [
        rml:source "%1$s" ;
        rml:referenceFormulation ql:XPath ;
        rml:iterator "/%2$s/OBJECT_CONTRACT/OBJECT_DESCR/DURATION"
    ];

    rr:subjectMap [
        rr:template "http://data.europa.eu/a4g/resource/id_{replace(../../REFERENCE_NUMBER, '[^a-zA-Z0-9]', '-')}-{replace(../../../CONTRACTING_BODY/ADDRESS_CONTRACTING_BODY/NATIONALID, '[^a-zA-Z0-9]', '-')}_Duration_{generate-id(../../REFERENCE_NUMBER)}" ;
        # rr:class epo:Duration
        rr:class epo:SpecificDuration
    ].

tedm:Period a rr:TriplesMap ;
    rml:logicalSource [
        rml:source "%1$s" ;
        rml:referenceFormulation ql:XPath ;
        rml:iterator "/%2$s/OBJECT_CONTRACT/OBJECT_DESCR/DATE_START | /%2$s/OBJECT_CONTRACT/OBJECT_DESCR/DATE_END"
    ];

    rr:subjectMap [
        rr:template "http://data.europa.eu/a4g/resource/id_{replace(../../REFERENCE_NUMBER, '[^a-zA-Z0-9]', '-')}-{replace(../../../CONTRACTING_BODY/ADDRESS_CONTRACTING_BODY/NATIONALID, '[^a-zA-Z0-9]', '-')}_Period_{generate-id(../../REFERENCE_NUMBER)}" ;
        rr:class epo:Period
    ].

tedm:FrameworkAgreementTechniqueUsage a rr:TriplesMap ;
    rml:logicalSource [
        rml:source "%1$s" ;
        rml:iterator "/%2$s/PROCEDURE/FRAMEWORK" ;
        rml:referenceFormulation ql:XPath
    ];

    rr:subjectMap [
        rr:template "http://data.europa.eu/a4g/resource/id_{replace(../../OBJECT_CONTRACT/REFERENCE_NUMBER, '[^a-zA-Z0-9]', '-')}-{replace(../../CONTRACTING_BODY/ADDRESS_CONTRACTING_BODY/NATIONALID, '[^a-zA-Z0-9]', '-')}_FrameworkAgreementTechniqueUsage_{generate-id(../../OBJECT_CONTRACT/REFERENCE_NUMBER)}" ;
        rr:class epo:FrameworkAgreementTechniqueUsage
    ].

tedm:FrameworkAgreementTermProcedure a rr:TriplesMap ;
    rml:logicalSource [
        rml:source "%1$s" ;
        rml:iterator "/%2$s/PROCEDURE/FRAMEWORK" ;
        rml:referenceFormulation ql:XPath
    ];

    rr:subjectMap [
        rr:template "http://data.europa.eu/a4g/resource/id_{replace(../../OBJECT_CONTRACT/REFERENCE_NUMBER, '[^a-zA-Z0-9]', '-')}-{replace(../../CONTRACTING_BODY/ADDRESS_CONTRACTING_BODY/NATIONALID, '[^a-zA-Z0-9]', '-')}_FrameworkAgreementTermProcedure_{generate-id(../../OBJECT_CONTRACT/REFERENCE_NUMBER)}" ;
        rr:class epo:FrameworkAgreementTerm
    ].

tedm:DynamicPurchaseSystemTechniqueUsage a rr:TriplesMap ;
    rml:logicalSource [
        rml:source "%1$s" ;
        rml:iterator "/%2$s/PROCEDURE/DPS" ;
        rml:referenceFormulation ql:XPath
    ];

    rr:subjectMap [
        rr:template "http://data.europa.eu/a4g/resource/id_{replace(../../OBJECT_CONTRACT/REFERENCE_NUMBER, '[^a-zA-Z0-9]', '-')}-{replace(../../CONTRACTING_BODY/ADDRESS_CONTRACTING_BODY/NATIONALID, '[^a-zA-Z0-9]', '-')}_DynamicPurchaseSystemTechniqueUsage_{generate-id(../../OBJECT_CONTRACT/REFERENCE_NUMBER)}" ;
        rr:class epo:DynamicPurchaseSystemTechniqueUsage
    ].

tedm:DirectAwardTerm a rr:TriplesMap ;
    rml:logicalSource [
        rml:source "%1$s" ;
        rml:iterator "/%2$s/ADDITIONAL_CORE_DATA/D_JUSTIFICATION | /%2$s/PROCEDURE/PT_DIRECT" ;
        rml:referenceFormulation ql:XPath
    ];

    rr:subjectMap [
        rr:template "http://data.europa.eu/a4g/resource/id_{replace(../../OBJECT_CONTRACT/REFERENCE_NUMBER, '[^a-zA-Z0-9]', '-')}-{replace(../../CONTRACTING_BODY/ADDRESS_CONTRACTING_BODY/NATIONALID, '[^a-zA-Z0-9]', '-')}_DirectAwardTerm_{generate-id(../../OBJECT_CONTRACT/REFERENCE_NUMBER)}" ;
        rr:class epo:DirectAwardTerm
    ].

tedm:Contract a rr:TriplesMap ;
    rml:logicalSource [
        rml:source "%1$s" ;
        rml:iterator "/%2$s/AWARD_CONTRACT/AWARDED_CONTRACT | /%2$s/RESULTS/AWARDED_PRIZE | /%2$s/ADDITIONAL_CORE_DATA/OBJECT_CONTRACT_MODIFICATIONS" ;
        rml:referenceFormulation ql:XPath
    ];

    rr:subjectMap [
        rr:template "http://data.europa.eu/a4g/resource/id_{replace(../../OBJECT_CONTRACT/REFERENCE_NUMBER, '[^a-zA-Z0-9]', '-')}-{replace(../../CONTRACTING_BODY/ADDRESS_CONTRACTING_BODY/NATIONALID, '[^a-zA-Z0-9]', '-')}_Contract_{generate-id(../../OBJECT_CONTRACT/REFERENCE_NUMBER)}" ;
        rr:class epo:Contract
    ].

tedm:Winner a rr:TriplesMap ;
    rml:logicalSource [
        rml:source "%1$s" ;
        rml:iterator "/%2$s/AWARD_CONTRACT/AWARDED_CONTRACT/CONTRACTOR/ADDRESS_CONTRACTOR/OFFICIALNAME | /%2$s/RESULTS/AWARDED_PRIZE/WINNER/ADDRESS_WINNER/OFFICIALNAME | /%2$s/MODIFICATIONS_CONTRACT/DESCRIPTION_PROCUREMENT/CONTRACTOR/ADDRESS_CONTRACTOR/OFFICIALNAME" ;
        rml:referenceFormulation ql:XPath
    ];

    rr:subjectMap [
        rr:template "http://data.europa.eu/a4g/resource/id_{replace(/%2$s/OBJECT_CONTRACT/REFERENCE_NUMBER, '[^a-zA-Z0-9]', '-')}-{replace(/%2$s/CONTRACTING_BODY/ADDRESS_CONTRACTING_BODY/NATIONALID, '[^a-zA-Z0-9]', '-')}_Winner_{generate-id(.)}" ;
        rr:class epo:Winner
    ].

tedm:ContractorOrganisation a rr:TriplesMap ;
    rml:logicalSource [
        rml:source "%1$s" ;
        rml:iterator "/%2$s/AWARD_CONTRACT/AWARDED_CONTRACT/CONTRACTOR/ADDRESS_CONTRACTOR/OFFICIALNAME | /%2$s/RESULTS/AWARDED_PRIZE/WINNER/ADDRESS_WINNER/OFFICIALNAME | /%2$s/MODIFICATIONS_CONTRACT/DESCRIPTION_PROCUREMENT/CONTRACTOR/ADDRESS_CONTRACTOR/OFFICIALNAME" ;
        rml:referenceFormulation ql:XPath
    ];

    rr:subjectMap [
        rr:template "http://data.europa.eu/a4g/resource/id_{replace(/%2$s/OBJECT_CONTRACT/REFERENCE_NUMBER, '[^a-zA-Z0-9]', '-')}-{replace(/%2$s/CONTRACTING_BODY/ADDRESS_CONTRACTING_BODY/NATIONALID, '[^a-zA-Z0-9]', '-')}_Organisation_{generate-id(.)}" ;
        rr:class org:Organization
    ].

tedm:LotAwardOutcome a rr:TriplesMap ;
    rml:logicalSource [
        rml:source "%1$s" ;
        rml:iterator "/%2$s/AWARD_CONTRACT/AWARDED_CONTRACT/VAL_TOTAL | /%2$s/RESULTS/AWARDED_PRIZE/VAL_PRIZE | /%2$s/MODIFICATIONS_CONTRACT/INFO_MODIFICATIONS/VAL_TOTAL_BEFORE" ;
        rml:referenceFormulation ql:XPath
    ];

    rr:subjectMap [
        rr:template "http://data.europa.eu/a4g/resource/id_{replace(../../../OBJECT_CONTRACT/REFERENCE_NUMBER, '[^a-zA-Z0-9]', '-')}-{replace(../../../CONTRACTING_BODY/ADDRESS_CONTRACTING_BODY/NATIONALID, '[^a-zA-Z0-9]', '-')}_LotAwardOutcome_{generate-id(../../../OBJECT_CONTRACT/REFERENCE_NUMBER)}" ;
        rr:class epo:LotAwardOutcome
    ].

tedm:LotAwardOutcomeAwardedMonetaryValue a rr:TriplesMap ;
    rml:logicalSource [
        rml:source "%1$s" ;
        rml:iterator "/%2$s/AWARD_CONTRACT/AWARDED_CONTRACT/VAL_TOTAL | /%2$s/RESULTS/AWARDED_PRIZE/VAL_PRIZE | /%2$s/MODIFICATIONS_CONTRACT/INFO_MODIFICATIONS/VAL_TOTAL_BEFORE" ;
        rml:referenceFormulation ql:XPath
    ];

    rr:subjectMap [
        rr:template "http://data.europa.eu/a4g/resource/id_{replace(../../../OBJECT_CONTRACT/REFERENCE_NUMBER, '[^a-zA-Z0-9]', '-')}-{replace(../../../CONTRACTING_BODY/ADDRESS_CONTRACTING_BODY/NATIONALID, '[^a-zA-Z0-9]', '-')}_LotAwardOutcomeAwardedMonetaryValue_{generate-id(../../../OBJECT_CONTRACT/REFERENCE_NUMBER)}" ;
        rr:class epo:MonetaryValue
    ].

tedm:SubmissionStatisticalInformation a rr:TriplesMap ;
    rml:logicalSource [
        rml:source "%1$s" ;
        rml:iterator "/%2$s/AWARD_CONTRACT/AWARDED_CONTRACT | /%2$s/RESULTS/AWARDED_PRIZE | /%2$s/MODIFICATIONS_CONTRACT/INFO_MODIFICATIONS" ;
        rml:referenceFormulation ql:XPath
    ];

    rr:subjectMap [
        rml:reference "if(exists(NB_TENDERS_RECEIVED) or exists(NB_SME_TENDER) or exists(NB_PARTICIPANTS) or exists(NB_PARTICIPANTS_SME) or exists(VAL_TOTAL) or exists(VAL_PRIZE) or exists(VAL_TOTAL_BEFORE)) then 'http://data.europa.eu/a4g/resource/id_' || replace(../../OBJECT_CONTRACT/REFERENCE_NUMBER, '[^a-zA-Z0-9]', '-') || '-' || replace(../../CONTRACTING_BODY/ADDRESS_CONTRACTING_BODY/NATIONALID, '[^a-zA-Z0-9]', '-')||  '_SubmissionStatisticalInformation_' || generate-id(../../OBJECT_CONTRACT/REFERENCE_NUMBER) else null" ;
        rr:class epo:SubmissionStatisticalInformation
    ].

tedm:NoticeChange a rr:TriplesMap ;
    rml:logicalSource [
        rml:source "%1$s" ;
        rml:referenceFormulation ql:XPath ;
        rml:iterator "/%2$s/ADDITIONAL_CORE_DATA/DATETIME_LAST_CHANGE"
    ];

    rr:subjectMap [
        rr:template "http://data.europa.eu/a4g/resource/id_{replace(../../OBJECT_CONTRACT/REFERENCE_NUMBER, '[^a-zA-Z0-9]', '-')}-{replace(../../CONTRACTING_BODY/ADDRESS_CONTRACTING_BODY/NATIONALID, '[^a-zA-Z0-9]', '-')}_NoticeChange_{generate-id(../../OBJECT_CONTRACT/REFERENCE_NUMBER)}" ;
        rr:class epo:NoticeChange ;
    ].

tedm:ElementChangeDescription a rr:TriplesMap ;
    rml:logicalSource [
        rml:source "%1$s" ;
        rml:referenceFormulation ql:XPath ;
        rml:iterator "/%2$s/ADDITIONAL_CORE_DATA/DATETIME_LAST_CHANGE"
    ];

    rr:subjectMap [
        rr:template "http://data.europa.eu/a4g/resource/id_{replace(../../OBJECT_CONTRACT/REFERENCE_NUMBER, '[^a-zA-Z0-9]', '-')}-{replace(../../CONTRACTING_BODY/ADDRESS_CONTRACTING_BODY/NATIONALID, '[^a-zA-Z0-9]', '-')}_ElementChangeDescription_{generate-id(../../OBJECT_CONTRACT/REFERENCE_NUMBER)}" ;
        rr:class epo:ElementChangeDescription ;
    ].

tedm:ProcedureModification a rr:TriplesMap ;
    rml:logicalSource [
        rml:source "%1$s" ;
        rml:iterator "/%2$s/MODIFICATIONS_CONTRACT" ;
        rml:referenceFormulation ql:XPath
    ];

    rr:subjectMap [
        rr:template "http://data.europa.eu/a4g/resource/id_{replace(../OBJECT_CONTRACT/REFERENCE_NUMBER, '[^a-zA-Z0-9]', '-')}-{replace(../CONTRACTING_BODY/ADDRESS_CONTRACTING_BODY/NATIONALID, '[^a-zA-Z0-9]', '-')}_ProcedureModification_{generate-id(../OBJECT_CONTRACT/REFERENCE_NUMBER)}" ;
        rr:class epo:Procedure
    ].

tedm:LotModification a rr:TriplesMap ;
    rml:logicalSource [
        rml:source "%1$s" ;
        rml:iterator "/%2$s/MODIFICATIONS_CONTRACT" ;
        rml:referenceFormulation ql:XPath
    ];

    rr:subjectMap [
        rr:template "http://data.europa.eu/a4g/resource/id_{replace(../OBJECT_CONTRACT/REFERENCE_NUMBER, '[^a-zA-Z0-9]', '-')}-{replace(../CONTRACTING_BODY/ADDRESS_CONTRACTING_BODY/NATIONALID, '[^a-zA-Z0-9]', '-')}_LotModification_{generate-id(../OBJECT_CONTRACT/REFERENCE_NUMBER)}" ;
        rr:class epo:Lot
    ].

tedm:LotPurposeModification a rr:TriplesMap ;
    rml:logicalSource [
        rml:source "%1$s" ;
        rml:iterator "/%2$s/MODIFICATIONS_CONTRACT/DESCRIPTION_PROCUREMENT" ;
        rml:referenceFormulation ql:XPath
    ];

    rr:subjectMap [
        rml:reference "if(exists(CPV_ADDITIONAL/CPV_CODE)) then 'http://data.europa.eu/a4g/resource/id_' || replace(../../OBJECT_CONTRACT/REFERENCE_NUMBER, '[^a-zA-Z0-9]', '-') || '-' || replace(../../CONTRACTING_BODY/ADDRESS_CONTRACTING_BODY/NATIONALID, '[^a-zA-Z0-9]', '-') || '_LotPurposeModification_' || generate-id(.) else null" ;
        rr:class epo:Purpose
    ].

tedm:LotAwardOutcomeModification a rr:TriplesMap ;
    rml:logicalSource [
        rml:source "%1$s" ;
        rml:iterator "/%2$s/MODIFICATIONS_CONTRACT/INFO_MODIFICATIONS/VAL_TOTAL_AFTER" ;
        rml:referenceFormulation ql:XPath
    ];

    rr:subjectMap [
        rr:template "http://data.europa.eu/a4g/resource/id_{replace(../../../OBJECT_CONTRACT/REFERENCE_NUMBER, '[^a-zA-Z0-9]', '-')}-{replace(../../../CONTRACTING_BODY/ADDRESS_CONTRACTING_BODY/NATIONALID, '[^a-zA-Z0-9]', '-')}_LotAwardOutcomeModification_{generate-id(../../../OBJECT_CONTRACT/REFERENCE_NUMBER)}" ;
        rr:class epo:LotAwardOutcome
    ].

tedm:LotAwardOutcomeAwardedMonetaryValueModification a rr:TriplesMap ;
    rml:logicalSource [
        rml:source "%1$s" ;
        rml:iterator "/%2$s/MODIFICATIONS_CONTRACT/INFO_MODIFICATIONS/VAL_TOTAL_AFTER" ;
        rml:referenceFormulation ql:XPath
    ];

    rr:subjectMap [
        rr:template "http://data.europa.eu/a4g/resource/id_{replace(../../../OBJECT_CONTRACT/REFERENCE_NUMBER, '[^a-zA-Z0-9]', '-')}-{replace(../../../CONTRACTING_BODY/ADDRESS_CONTRACTING_BODY/NATIONALID, '[^a-zA-Z0-9]', '-')}_LotAwardOutcomeAwardedMonetaryValueModification_{generate-id(../../../OBJECT_CONTRACT/REFERENCE_NUMBER)}" ;
        rr:class epo:MonetaryValue
    ].

tedm:NoticeAwardInformation a rr:TriplesMap ;
    rml:logicalSource [
        rml:source "%1$s" ;
        rml:iterator "/%2$s/AWARD_CONTRACT/AWARDED_CONTRACT/VAL_TOTAL | /%2$s/RESULTS/AWARDED_PRIZE/VAL_PRIZE | /%2$s/MODIFICATIONS_CONTRACT/INFO_MODIFICATIONS/VAL_TOTAL_AFTER" ;
        rml:referenceFormulation ql:XPath
    ];

    rr:subjectMap [
        rr:template "http://data.europa.eu/a4g/resource/id_{replace(../../../OBJECT_CONTRACT/REFERENCE_NUMBER, '[^a-zA-Z0-9]', '-')}-{replace(../../../CONTRACTING_BODY/ADDRESS_CONTRACTING_BODY/NATIONALID, '[^a-zA-Z0-9]', '-')}_NoticeAwardInformation_{generate-id(../../../OBJECT_CONTRACT/REFERENCE_NUMBER)}" ;
        rr:class epo:NoticeAwardInformation
    ].

tedm:ContractModification a rr:TriplesMap ;
    rml:logicalSource [
        rml:source "%1$s" ;
        rml:iterator "/%2$s/MODIFICATIONS_CONTRACT/INFO_MODIFICATIONS" ;
        rml:referenceFormulation ql:XPath
    ];

    rr:subjectMap [
        rr:template "http://data.europa.eu/a4g/resource/id_{replace(../../OBJECT_CONTRACT/REFERENCE_NUMBER, '[^a-zA-Z0-9]', '-')}-{replace(../../CONTRACTING_BODY/ADDRESS_CONTRACTING_BODY/NATIONALID, '[^a-zA-Z0-9]', '-')}_ContractModification_{generate-id(../../OBJECT_CONTRACT/REFERENCE_NUMBER)}" ;
        rr:class epo:ContractModification
    ].

tedm:ElementModificationDescription a rr:TriplesMap ;
    rml:logicalSource [
        rml:source "%1$s" ;
        rml:iterator "/%2$s/MODIFICATIONS_CONTRACT/INFO_MODIFICATIONS/ADDITIONAL_NEED | /%2$s/MODIFICATIONS_CONTRACT/INFO_MODIFICATIONS/UNFORESEEN_CIRCUMSTANCE" ;
        rml:referenceFormulation ql:XPath
    ];

    rr:subjectMap [
        rr:template "http://data.europa.eu/a4g/resource/id_{replace(../../../OBJECT_CONTRACT/REFERENCE_NUMBER, '[^a-zA-Z0-9]', '-')}-{replace(../../../CONTRACTING_BODY/ADDRESS_CONTRACTING_BODY/NATIONALID, '[^a-zA-Z0-9]', '-')}_ElementModificationDescription_{generate-id(../../../OBJECT_CONTRACT/REFERENCE_NUMBER)}" ;
        rr:class epo:ElementModificationDescription
    ].

tedm:Procedure a rr:TriplesMap ;
    rr:predicateObjectMap [
        rr:predicate epo:isSubjectToProcedureSpecificTerm ;
        rr:objectMap [
            rr:parentTriplesMap tedm:DirectAwardTerm
        ]
    ].

tedm:DirectAwardTerm a rr:TriplesMap ;
    rr:predicateObjectMap [
        rr:predicate epo:hasJustification ;
        rr:objectMap [ rml:reference "P" ]
    ].
tedm:Notice a rr:TriplesMap ;
    # Second (more specific) notice type depending on NOTICE TYPE
    rr:predicateObjectMap [
        rr:predicate rdf:type ;
        rr:objectMap [
            rml:reference "if(exists(AWARD_CONTRACT) or exists(RESULTS)) then 'http://data.europa.eu/a4g/ontology#ResultNotice' else if(exists(PROCEDURE/DATETIME_RECEIPT_TENDERS) or exists(CONTRACTING_BODY/URL_PARTICIPATION)) then 'http://data.europa.eu/a4g/ontology#CompetitionNotice' else if(@TIME_LIMITS='PRI_REDUCING_TIME_LIMITS') then 'http://data.europa.eu/a4g/ontology#PlanningNotice' else if(exists(MODIFICATIONS_CONTRACT)) then 'http://data.europa.eu/a4g/ontology#ContractModificationNotice' else null " ;
            rr:termType rr:IRI ;
        ]
    ];

    rr:predicateObjectMap [
        rr:predicate epo:hasPublicationDate ;
        rr:objectMap [
            rml:reference "ADDITIONAL_CORE_DATA/DATE_FIRST_PUBLICATION" ;
            rr:datatype xsd:date ;
        ]
    ];

    rr:predicateObjectMap [
        rr:predicate epo:hasDispatchDate ;
        rr:objectMap [
            rml:reference "COMPLEMENTARY_INFO/DATE_DISPATCH_NOTICE" ;
            rr:datatype xsd:date ;
        ]
    ];

    rr:predicateObjectMap [
        rr:predicate epo:announcesRole ;
        rr:objectMap [
            rr:parentTriplesMap tedm:Buyer ;
            rr:joinCondition [
                rr:child "if(name()='KD_7_2_Z2' or name()='KD_8_2_Z3') then 'false' else 'true'" ;
                rr:parent "'true'" ;
            ]
        ]
    ];

    rr:predicateObjectMap [
        rr:predicate epo:announcesRole ;
        rr:objectMap [
            rr:parentTriplesMap tedm:AdditionalBuyer ;
            rr:joinCondition [
                rr:child "if(name()='KD_7_2_Z2' or name()='KD_8_2_Z3') then 'false' else 'true'" ;
                rr:parent "'true'" ;
            ]
        ]
    ];

    rr:predicateObjectMap [
        rr:predicate epo:announcesRole ;
        rr:objectMap [
            rr:parentTriplesMap tedm:Winner ;
            rr:joinCondition [
                rr:child "if(name()='KD_7_2_Z2' or name()='KD_8_2_Z3') then 'false' else 'true'" ;
                rr:parent "'true'" ;
            ]
        ]
    ];

    rr:predicateObjectMap [
        rr:predicate epo:refersToProcedure ;
        rr:objectMap [
            rr:parentTriplesMap tedm:Procedure
        ]
    ];

    rr:predicateObjectMap [
        rr:predicate epo:refersToLot ;
        rr:objectMap [
            rr:parentTriplesMap tedm:Lot ;
            rr:joinCondition [
                rr:child "if(name()='KD_7_2_Z2' or name()='KD_8_2_Z3') then 'false' else 'true'" ;
                rr:parent "'true'" ;
            ]
        ]
    ];

    rr:predicateObjectMap [
        rr:predicate epo:announcesContract ;
        rr:objectMap [
            rr:parentTriplesMap tedm:Contract ;
            rr:joinCondition [
                rr:child "if(name()='KD_7_2_Z2' or name()='KD_8_2_Z3') then 'false' else 'true'" ;
                rr:parent "'true'" ;
            ]
        ]
    ];

    rr:predicateObjectMap [
        rr:predicate epo:refersToContractToBeModified ;
        rr:objectMap [
            rr:parentTriplesMap tedm:Contract ;
            rr:joinCondition [
                rr:child "if(name()='KD_7_2_Z2' or name()='KD_8_2_Z3') then 'true' else 'false'" ;
                rr:parent "'true'" ;
            ]
        ]
    ];

    rr:predicateObjectMap [
        rr:predicate epo:announcesNoticeAwardInformation ;
        rr:objectMap [
            rr:parentTriplesMap tedm:NoticeAwardInformation
        ]
    ].

tedm:NoticeChange a rr:TriplesMap ;
    rr:predicateObjectMap [
        rr:predicate epo:refersToPrevious ;
        rr:objectMap [
            rr:parentTriplesMap tedm:Notice
        ]
    ];

    rr:predicateObjectMap [
        rr:predicate epo:hasElementChange ;
        rr:objectMap [
            rr:parentTriplesMap tedm:ElementChangeDescription
        ]
    ].

tedm:ElementChangeDescription a rr:TriplesMap ;
    rr:predicateObjectMap [
        rr:predicate epo:hasProcurementDocumentChangeDate ;
        rr:objectMap [
            rml:reference "." ;
            rr:datatype xsd:dateTime ;
        ]
    ].

tedm:BuyerOrganisationGroup a rr:TriplesMap ;
    rr:predicateObjectMap [
        rr:predicate epo:hasMember ;
        rr:objectMap [
            rr:parentTriplesMap tedm:Organisation
        ]
    ];

    rr:predicateObjectMap [
        rr:predicate epo:hasMember ;
        rr:objectMap [
            rr:parentTriplesMap tedm:AdditionalOrganisation
        ]
    ].

tedm:Buyer a rr:TriplesMap ;
    rr:predicateObjectMap [
        rr:predicate epo:playedBy ;
        rr:objectMap [
            rr:parentTriplesMap tedm:Organisation
        ]
    ];

    rr:predicateObjectMap [
        rr:predicate epo:hasContactPointInRole ;
        rr:objectMap [
            rr:parentTriplesMap tedm:ContactPoint
        ]
    ];

    rr:predicateObjectMap [
        rr:predicate epo:contextualisedBy ;
        rr:objectMap [
            rr:parentTriplesMap tedm:Procedure ;
            rr:joinCondition [
                rr:child "if(name(../..)='KD_7_2_Z2' or name(../..)='KD_8_2_Z3') then 'true' else 'false'" ;
                rr:parent "'true'" ;
            ]
        ]
    ].

tedm:AdditionalBuyer a rr:TriplesMap ;
    rr:predicateObjectMap [
        rr:predicate epo:playedBy ;
        rr:objectMap [
            rr:parentTriplesMap tedm:AdditionalOrganisation ;
            rr:joinCondition [
                rr:child "NATIONALID" ;
                rr:parent "NATIONALID" ;
            ]
        ]
    ];

    rr:predicateObjectMap [
        rr:predicate epo:hasContactPointInRole ;
        rr:objectMap [
            rr:parentTriplesMap tedm:AdditionalContactPoint ;
            rr:joinCondition [
                rr:child "NATIONALID" ;
                rr:parent "NATIONALID" ;
            ]
        ]
    ];

    rr:predicateObjectMap [
        rr:predicate epo:contextualisedBy ;
        rr:objectMap [
            rr:parentTriplesMap tedm:Procedure ;
            rr:joinCondition [
                rr:child "if(name()='KD_7_2_Z2' or name()='KD_8_2_Z3') then 'true' else 'false'" ;
                rr:parent "'true'" ;
            ]
        ]
    ].

tedm:Organisation a rr:TriplesMap ;
    rr:predicateObjectMap [
        rr:predicate epo:hasLegalName ;
        rr:objectMap [ rml:reference "OFFICIALNAME" ]
    ];

    rr:predicateObjectMap [
        rr:predicate epo:hasID;
        rr:objectMap [
            rr:parentTriplesMap tedm:OrganisationIdentifier ;
            rr:joinCondition [
                rr:child "NATIONALID" ;
                rr:parent "." ;
            ]
        ]
    ];

    rr:predicateObjectMap [
        rr:predicate cccev:registeredAddress ;
        rr:objectMap [
            rr:parentTriplesMap tedm:OrganisationAddress
        ]
    ].

tedm:AdditionalOrganisation a rr:TriplesMap ;
    rr:predicateObjectMap [
        rr:predicate epo:hasLegalName ;
        rr:objectMap [ rml:reference "OFFICIALNAME" ]
    ];

    rr:predicateObjectMap [
        rr:predicate epo:hasID ;
        rr:objectMap [
            rr:parentTriplesMap tedm:OrganisationIdentifier ;
            rr:joinCondition [
                rr:child "NATIONALID" ;
                rr:parent "." ;
            ]  
        ]
    ];

    rr:predicateObjectMap [
        rr:predicate cccev:registeredAddress ;
        rr:objectMap [
            rr:parentTriplesMap tedm:AdditionalOrganisationAddress ;
            rr:joinCondition [
                rr:child "NATIONALID" ;
                rr:parent "NATIONALID" ;
            ]
        ]
    ].

tedm:OrganisationIdentifier a rr:TriplesMap ;
    rr:predicateObjectMap [
        rr:predicate epo:hasIdentifierValue ;
        rr:objectMap [ rml:reference "." ]
    ].

tedm:ContactPoint a rr:TriplesMap ;
    rr:predicateObjectMap [
        rr:predicate cccev:email ;
        rr:objectMap [ rml:reference "E_MAIL" ]
    ];

    rr:predicateObjectMap [
        rr:predicate cccev:telephone ;
        rr:objectMap [ rml:reference "PHONE" ]
    ];

    rr:predicateObjectMap [
        rr:predicate epo:hasContactName ;
        rr:objectMap [ rml:reference "CONTACT" ]
    ].

tedm:AdditionalContactPoint a rr:TriplesMap ;
    rr:predicateObjectMap [
        rr:predicate cccev:email ;
        rr:objectMap [ rml:reference "E_MAIL" ]
    ];

    rr:predicateObjectMap [
        rr:predicate cccev:telephone ;
        rr:objectMap [ rml:reference "PHONE" ]
    ];

    rr:predicateObjectMap [
        rr:predicate epo:hasContactName ;
        rr:objectMap [ rml:reference "CONTACT" ]
    ].

tedm:OrganisationAddress a rr:TriplesMap ;
    rr:predicateObjectMap [
        rr:predicate epo:adminUnitL2 ;
        rr:objectMap [
            rml:reference "if(not(exists(DOMAIN))) then null else if(DOMAIN='Vorarlberg') then'http://publications.europa.eu/resource/authority/atu/AUT_BLD_VORALB' else if(DOMAIN='Vienna') then 'http://publications.europa.eu/resource/authority/atu/AUT_BLD_VIE' else if(DOMAIN='UpperAustria') then 'http://publications.europa.eu/resource/authority/atu/AUT_BLD_OO' else if(DOMAIN='Tyrol') then 'http://publications.europa.eu/resource/authority/atu/AUT_BLD_TIROL' else if(DOMAIN='Styria') then 'http://publications.europa.eu/resource/authority/atu/AUT_BLD_STEIER' else if(DOMAIN='Salzburg') then 'http://publications.europa.eu/resource/authority/atu/AUT_BLD_SZG' else if(DOMAIN='LowerAustria') then 'http://publications.europa.eu/resource/authority/atu/AUT_BLD_NO' else if(DOMAIN='Carinthia') then 'http://publications.europa.eu/resource/authority/atu/AUT_BLD_KAER' else if(DOMAIN='Burgenland') then 'http://publications.europa.eu/resource/authority/atu/AUT_BLD_BURG' else 'http://publications.europa.eu/resource/authority/atu/AT'" ;
            rr:termType rr:IRI ;
        ]
    ];

    rr:predicateObjectMap [
        rr:predicate epo:hasCountryCode ;
        rr:objectMap [
            rr:template "http://publications.europa.eu/resource/authority/country/AUT"
        ]
    ].

tedm:AdditionalOrganisationAddress  a rr:TriplesMap ;
    rr:predicateObjectMap [
        rr:predicate epo:adminUnitL2 ;
        rr:objectMap [
            rml:reference "if(not(exists(DOMAIN))) then null else if(DOMAIN='Vorarlberg') then'http://publications.europa.eu/resource/authority/atu/AUT_BLD_VORALB' else if(DOMAIN='Vienna') then 'http://publications.europa.eu/resource/authority/atu/AUT_BLD_VIE' else if(DOMAIN='UpperAustria') then 'http://publications.europa.eu/resource/authority/atu/AUT_BLD_OO' else if(DOMAIN='Tyrol') then 'http://publications.europa.eu/resource/authority/atu/AUT_BLD_TIROL' else if(DOMAIN='Styria') then 'http://publications.europa.eu/resource/authority/atu/AUT_BLD_STEIER' else if(DOMAIN='Salzburg') then 'http://publications.europa.eu/resource/authority/atu/AUT_BLD_SZG' else if(DOMAIN='LowerAustria') then 'http://publications.europa.eu/resource/authority/atu/AUT_BLD_NO' else if(DOMAIN='Carinthia') then 'http://publications.europa.eu/resource/authority/atu/AUT_BLD_KAER' else if(DOMAIN='Burgenland') then 'http://publications.europa.eu/resource/authority/atu/AUT_BLD_BURG' else 'http://publications.europa.eu/resource/authority/atu/AT'" ;
            rr:termType rr:IRI ;
        ]
    ];

    rr:predicateObjectMap [
        rr:predicate epo:hasCountryCode ;
        rr:objectMap [
            rr:template "http://publications.europa.eu/resource/authority/country/AUT"
        ]
    ].

tedm:AccessTerm a rr:TriplesMap ;
    rr:predicateObjectMap [
        rr:predicate epo:isProcurementDocumentRestricted ;
        rr:objectMap [
            rml:reference "if(contains(name(), 'RESTRICTED')) then 'true' else 'false'" ;
            rr:datatype xsd:boolean ;
        ]
    ];

    rr:predicateObjectMap [
        rr:predicate epo:hasPublicAccessURL ;
        rr:objectMap [
            rml:reference "../URL_DOCUMENT" ;
            rr:datatype xsd:anyURI ;
        ]
    ].

tedm:Procedure a rr:TriplesMap ;
    rr:predicateObjectMap [
        rr:predicate epo:hasTitle ;
        rr:objectMap [ rml:reference "TITLE/P" ]
    ];

    rr:predicateObjectMap [
        rr:predicate epo:hasDescription ;
        rr:objectMap [ rml:reference "SHORT_DESCR/P" ]
    ];

    rr:predicateObjectMap [
        rr:predicate epo:hasDescription ;
        rr:objectMap [ rml:reference "if(name(..)='KD_8_1_Z3' or name(..)='KD_8_2_Z2') then OBJECT_DESCR/SHORT_DESCR/P else null" ]
    ];

    rr:predicateObjectMap [
        rr:predicate epo:hasAdditionalInformation ;
        rr:objectMap [ rml:reference "../ADDITIONAL_CORE_DATA/PROCEDURE_SHORT_DESCRIPTION/P" ]
    ];

    rr:predicateObjectMap [
        rr:predicate epo:hasProcurementScopeDividedIntoLot ;
        rr:objectMap [
            rr:parentTriplesMap tedm:Lot
        ]
    ];

    rr:predicateObjectMap [
        rr:predicate epo:hasPurpose ;
        rr:objectMap [
            rr:parentTriplesMap tedm:ProcedurePurpose
        ]
    ];

    rr:predicateObjectMap [
        rr:predicate epo:hasID ;
        rr:objectMap [
            rr:parentTriplesMap tedm:ProcedureIdentifier
        ]
    ];

    rr:predicateObjectMap [
        rr:predicate epo:foreseesContractSpecificTerm ;
        rr:objectMap [
            rr:parentTriplesMap tedm:ContractTermProcedure
        ]
    ].

tedm:ProcedurePurpose a rr:TriplesMap ;
#     # Not mapping supplementary CPV codes, as EPO does not provide a way to group them with "regular" CPV codes.
#     rr:predicateObjectMap [
#         rr:predicate epo:hasMainClassification ;
#         rr:objectMap [ rr:template "http://data.europa.eu/cpv/cpv/{CPV_MAIN/CPV_SUPPLEMENTARY_CODE/@CODE}" ]
#     ];

    rr:predicateObjectMap [
        rr:predicate epo:hasMainClassification ;
        rr:objectMap [ rr:template "http://data.europa.eu/cpv/cpv/{CPV_MAIN/CPV_CODE/@CODE}" ]
    ].

tedm:Lot a rr:TriplesMap ;
    rr:predicateObjectMap [
        rr:predicate epo:hasTitle ;
        rr:objectMap [ rml:reference "../OBJECT_DESCR/TITLE/P" ]
    ];

    rr:predicateObjectMap [
        rr:predicate epo:hasDescription ;
        rr:objectMap [ rml:reference "if(name(../..)='KD_7_2_Z2' or name(../..)='KD_8_2_Z3') then ../OBJECT_DESCR/SHORT_DESCR/P else null" ]
    ];

    rr:predicateObjectMap [
        rr:predicate epo:hasPurpose ;
        rr:objectMap [
            rr:parentTriplesMap tedm:LotPurpose ;
        ]
    ];

    rr:predicateObjectMap [
        rr:predicate epo:foreseesContractSpecificTerm ;
        rr:objectMap [
            rr:parentTriplesMap tedm:ContractTermLot ;
            rr:joinCondition [
                rr:child "path()" ;
                rr:parent "path()" ;
            ]
        ]
    ].

tedm:ContractTermLot a rr:TriplesMap ;
    rr:predicateObjectMap [
        rr:predicate epo:definesSpecificPlaceOfPerformance ;
        rr:objectMap [
            rr:parentTriplesMap tedm:ContractTermLotLocation
        ]
    ];

    rr:predicateObjectMap [
        rr:predicate epo:definesContractPeriod ;
        rr:objectMap [
            rr:parentTriplesMap tedm:Period
        ]
    ];

    rr:predicateObjectMap [
        rr:predicate epo:definesContractDuration ;
        rr:objectMap [
            rr:parentTriplesMap tedm:Duration
        ]
    ].

tedm:ContractTermLotLocation a rr:TriplesMap ;
    rr:predicateObjectMap [
        rr:predicate epo:hasNutsCode ;
        rr:objectMap [ rr:template "http://data.europa.eu/nuts/code/{NUTS/@CODE}" ]
    ];

    rr:predicateObjectMap [
        rr:predicate locn:address ;
        rr:objectMap [
            rr:parentTriplesMap tedm:ContractTermLotLocationAddress
        ]
    ].

tedm:ContractTermLotLocationAddress a rr:TriplesMap ;
    rr:predicateObjectMap [
        rr:predicate locn:fullAddress ;
        rr:objectMap [ rml:reference "MAIN_SITE/P" ]
    ].

tedm:Duration a rr:TriplesMap ;
    rr:predicateObjectMap [
        rr:predicate time:numericDuration ;
        rr:objectMap [
            rml:reference "." ;
            rr:datatype xsd:decimal ;
        ]
    ];

    rr:predicateObjectMap [
        rr:predicate time:unitType ;
        rr:objectMap [
            rml:reference "if(./@TYPE='MONTH') then 'http://www.w3.org/2006/time#unitMonth' else if(./@TYPE='DAY') then 'http://www.w3.org/2006/time#unitDay' else null " ;
            rr:termType rr:IRI ;
        ]
    ].

tedm:Period a rr:TriplesMap ;
    rr:predicateObjectMap [
        rr:predicate epo:hasBeginning ;
        rr:objectMap [
            rml:reference "if(exists(../DATE_START)) then ../DATE_START else null" ;
            rr:datatype xsd:date ;
        ]
    ];

    rr:predicateObjectMap [
        rr:predicate epo:hasEnd ;
        rr:objectMap [
            rml:reference "if(exists(../DATE_END)) then ../DATE_END else null" ;
            rr:datatype xsd:date ;
        ]
    ].

tedm:LotPurpose a rr:TriplesMap ;
#     # Not mapping supplementary CPV codes, as EPO does not provide a way to group them with "regular" CPV codes
#     rr:predicateObjectMap [
#         rr:predicate epo:hasAdditionalClassification ;
#         rr:objectMap [ rr:template "http://data.europa.eu/cpv/cpv/{CPV_ADDITIONAL/CPV_SUPPLEMENTARY_CODE/@CODE}" ]
#     ];

    rr:predicateObjectMap [
        rr:predicate epo:hasAdditionalClassification ;
        rr:objectMap [ rr:template "http://data.europa.eu/cpv/cpv/{CPV_ADDITIONAL/CPV_CODE/@CODE}" ]
    ].

tedm:ContractTermProcedure a rr:TriplesMap ;
    rr:predicateObjectMap [
        rr:predicate epo:hasContractNatureType ;
        rr:objectMap [ rr:template "http://publications.europa.eu/resource/authority/contract-nature/{lower-case(.)}" ]
    ].
tedm:ProcedureIdentifier a rr:TriplesMap ;
    rr:predicateObjectMap [
        rr:predicate epo:hasIdentifierValue ;
        rr:objectMap [ rml:reference "." ]
    ].

tedm:Procedure a rr:TriplesMap ;
    rr:predicateObjectMap [
        rr:predicate epo:hasProcedureType ;
        rr:objectMap [
            rr:template "http://publications.europa.eu/resource/authority/procurement-procedure-type/{if(exists(../PROCEDURE/PT_OPEN)) then 'open' else if(exists(../PROCEDURE/PT_RESTRICTED)) then 'restricted' else if(exists(../PROCEDURE/PT_COMPETITIVE_NEGOTIATION)) then 'neg-w-call' else if(exists(../PROCEDURE/PT_COMPETITIVE_DIALOGUE)) then 'comp-dial' else if(exists(../PROCEDURE/PT_INNOVATION_PARTNERSHIP)) then 'innovation' else null}" ;
            rr:termType rr:IRI ;
        ]
    ];

#     rr:predicateObjectMap [
#         rr:predicate epo:hasAcceleratedProcedureJustification ;
#         rr:objectMap [
#             rml:reference "../PROCEDURE/ACCELERATED_PROC" ;
#             rml:languageMap [ rml:reference "lower-case(ancestor::*/@LG)" ]
#         ]
#     ];

#     rr:predicateObjectMap [
#         rr:predicate epo:isAccelerated ;
#         rr:objectMap [
#             # rml:reference "if(exists(../PROCEDURE/ACCELERATED_PROC)) then 'true' else 'false'" ;
#             rml:reference "if(exists(../PROCEDURE/ACCELERATED_PROC)) then 'true' else null" ;
#             rr:datatype xsd:boolean ;
#         ]
#     ];

    rr:predicateObjectMap [
        rr:predicate epo:usesTechnique ;
        rr:objectMap [
            rr:parentTriplesMap tedm:DynamicPurchaseSystemTechniqueUsage
        ]
    ];

    rr:predicateObjectMap [
        rr:predicate epo:usesTechnique ;
        rr:objectMap [
            rr:parentTriplesMap tedm:FrameworkAgreementTechniqueUsage
        ]
    ];

    rr:predicateObjectMap [
        rr:predicate epo:isSubjectToProcedureSpecificTerm ;
        rr:objectMap [
            rr:parentTriplesMap tedm:AccessTerm
        ]
    ];

    rr:predicateObjectMap [
        rr:predicate epo:isSubjectToProcedureSpecificTerm ;
        rr:objectMap [
            rr:parentTriplesMap tedm:SubmissionTerm
        ]
    ];

    rr:predicateObjectMap [
        rr:predicate epo:isSubjectToProcedureSpecificTerm ;
        rr:objectMap [
            rr:parentTriplesMap tedm:FrameworkAgreementTermProcedure
        ]
    ].

# tedm:FrameworkAgreementTermProcedure a rr:TriplesMap ;
#     rr:predicateObjectMap [
#         rr:predicate epo:hasDurationExtensionJustification ;
#         rr:objectMap [
#             rml:reference "FRAMEWORK/JUSTIFICATION" ;
#             rml:languageMap [ rml:reference "lower-case(ancestor::*/@LG)" ]
#         ]
#     ].

tedm:SubmissionTerm a rr:TriplesMap ;
    rr:predicateObjectMap [
        rr:predicate epo:hasReceiptDeadline ;
        rr:objectMap [
            rml:reference "DATETIME_RECEIPT_TENDERS" ;
            rr:datatype xsd:dateTime ;
        ]
    ];

    rr:predicateObjectMap [
        rr:predicate epo:hasReceiptExpressionDeadline ;
        rr:objectMap [
            rml:reference "if(../@TIME_LIMITS='PRI_REDUCING_TIME_LIMITS' and exists(DATETIME_RECEIPT_TENDERS)) then DATETIME_RECEIPT_TENDERS else null" ;
            rr:datatype xsd:dateTime ;
        ]
    ];

    rr:predicateObjectMap [
        rr:predicate epo:hasSubmissionURL ;
        rr:objectMap [
            rml:reference "../CONTRACTING_BODY/URL_PARTICIPATION" ;
            rr:datatype xsd:anyURI ;
        ]
    ].
tedm:Contract a rr:TriplesMap ;
    rr:predicateObjectMap [
        rr:predicate epo:hasContractConclusionDate ;
        rr:objectMap [
            rml:reference "DATE_CONCLUSION_CONTRACT" ;
            rr:datatype xsd:date ;
        ]
    ];

    rr:predicateObjectMap [
        rr:predicate epo:hasTitle ;
        rr:objectMap [ rml:reference "TITLE/P" ]
    ];

    rr:predicateObjectMap [
        rr:predicate epo:includesLot ;
        rr:objectMap [
            rr:parentTriplesMap tedm:Lot
        ]
    ];

    rr:predicateObjectMap [
        rr:predicate epo:resultsFromLotAwardOutcome ;
        rr:objectMap [
            rr:parentTriplesMap tedm:LotAwardOutcome
        ]
    ].

tedm:LotAwardOutcome a rr:TriplesMap ;
    rr:predicateObjectMap [
        rr:predicate epo:hasAwardedValue ;
        rr:objectMap [
            rr:parentTriplesMap tedm:LotAwardOutcomeAwardedMonetaryValue
        ]
    ];

    rr:predicateObjectMap [
        rr:predicate epo:describesLot ;
        rr:objectMap [
            rr:parentTriplesMap tedm:Lot
        ]
    ].

tedm:LotAwardOutcomeAwardedMonetaryValue a rr:TriplesMap ;
    rr:predicateObjectMap [
        rr:predicate epo:hasAmountValue ;
        rr:objectMap [
            rml:reference "." ;
            rr:datatype xsd:decimal ;
        ]
    ];

    rr:predicateObjectMap [
        rr:predicate epo:hasCurrency ;
        rr:objectMap [ rr:template "http://publications.europa.eu/resource/authority/currency/{@CURRENCY}" ]
    ].

tedm:NoticeAwardInformation a rr:TriplesMap ;
    rr:predicateObjectMap [
        rr:predicate epo:hasTotalAwardedValue ;
        rr:objectMap [
            rml:reference "." ;
            rr:datatype xsd:decimal ;
        ]
    ].

tedm:Winner a rr:TriplesMap ;
    rr:predicateObjectMap [
        rr:predicate epo:contextualisedBy ;
        rr:objectMap [
            rr:parentTriplesMap tedm:Procedure ;
            rr:joinCondition [
                rr:child "if(name(../../../../..)='KD_7_2_Z2' or name(../../../../..)='KD_8_2_Z3') then 'true' else 'false'" ;
                rr:parent "'true'" ;
            ]
        ]
    ];

    rr:predicateObjectMap [
        rr:predicate epo:playedBy ;
        rr:objectMap [
            rr:parentTriplesMap tedm:ContractorOrganisation ;
            rr:joinCondition [
                rr:child "." ;
                rr:parent "." ;
            ]
        ]
    ].

tedm:ContractorOrganisation a rr:TriplesMap ;
    rr:predicateObjectMap [
        rr:predicate epo:hasLegalName ;
        rr:objectMap [ rml:reference "." ]
    ];

    rr:predicateObjectMap [
        rr:predicate epo:hasID ;
        rr:objectMap [
            rr:parentTriplesMap tedm:OrganisationIdentifier ;
            rr:joinCondition [
                rr:child "../NATIONALID" ;
                rr:parent "." ;
            ]
        ]
    ].

tedm:SubmissionStatisticalInformation a rr:TriplesMap ;
    rr:predicateObjectMap [
        rr:predicate epo:hasReceivedTenders ;
        rr:objectMap [
            rml:reference "NB_TENDERS_RECEIVED" ;
            rr:datatype xsd:integer ;
        ]
    ];

    rr:predicateObjectMap [
        rr:predicate epo:hasReceivedSMETenders ;
        rr:objectMap [
            rml:reference "NB_SME_TENDER" ;
            rr:datatype xsd:integer ;
        ]
    ];

    rr:predicateObjectMap [
        rr:predicate epo:hasReceivedTenders ;
        rr:objectMap [
            rml:reference "NB_PARTICIPANTS" ;
            rr:datatype xsd:integer ;
        ]
    ];

    rr:predicateObjectMap [
        rr:predicate epo:hasReceivedSMETenders ;
        rr:objectMap [
            rml:reference "NB_PARTICIPANTS_SME" ;
            rr:datatype xsd:integer ;
        ]
    ];

    rr:predicateObjectMap [
        rr:predicate epo:summarisesInformationForLotAwardOutcome ;
        rr:objectMap [
            rr:parentTriplesMap tedm:LotAwardOutcome
        ]
    ].
tedm:ProcedureModification a rr:TriplesMap ;
    rr:predicateObjectMap [
        rr:predicate epo:containsModificationsOf;
        rr:objectMap [
            rr:parentTriplesMap tedm:Procedure
        ]
    ].

tedm:LotModification a rr:TriplesMap ;
    rr:predicateObjectMap [
        rr:predicate epo:hasDescription ;
        rr:objectMap [ rml:reference "DESCRIPTION_PROCUREMENT/SHORT_DESCR/P" ]
    ];

    rr:predicateObjectMap [
        rr:predicate epo:containsModificationsOf;
        rr:objectMap [
            rr:parentTriplesMap tedm:Lot
        ]
    ];

    rr:predicateObjectMap [
        rr:predicate epo:hasPurpose ;
        rr:objectMap [
            rr:parentTriplesMap tedm:LotPurposeModification
        ]
    ].

tedm:LotPurposeModification a rr:TriplesMap ;
#     # Not mapping supplementary CPV codes, as EPO does not provide a way to group them with "regular" CPV codes
#     rr:predicateObjectMap [
#         rr:predicate epo:hasAdditionalClassification ;
#         rr:objectMap [ rr:template "http://data.europa.eu/cpv/cpv/{CPV_ADDITIONAL/CPV_SUPPLEMENTARY_CODE/@CODE}" ]
#     ];

    rr:predicateObjectMap [
        rr:predicate epo:hasAdditionalClassification ;
        rr:objectMap [ rr:template "http://data.europa.eu/cpv/cpv/{CPV_ADDITIONAL/CPV_CODE/@CODE}" ]
    ].

tedm:LotAwardOutcomeModification a rr:TriplesMap ;
    rr:predicateObjectMap [
        rr:predicate epo:hasAwardedValue ;
        rr:objectMap [
            rr:parentTriplesMap tedm:LotAwardOutcomeAwardedMonetaryValueModification
        ]
    ];

    rr:predicateObjectMap [
        rr:predicate epo:describesLot ;
        rr:objectMap [
            rr:parentTriplesMap tedm:LotModification;
        ]
    ].

tedm:LotAwardOutcomeAwardedMonetaryValueModification a rr:TriplesMap ;
    rr:predicateObjectMap [
        rr:predicate epo:hasAmountValue ;
        rr:objectMap [
            rml:reference "." ;
            rr:datatype xsd:decimal ;
        ]
    ];

    rr:predicateObjectMap [
        rr:predicate epo:hasCurrency ;
        rr:objectMap [ rr:template "http://publications.europa.eu/resource/authority/currency/{@CURRENCY}" ]
    ].

tedm:ContractModification a rr:TriplesMap ;
    rr:predicateObjectMap [
        rr:predicate epo:describesNotice;
        rr:objectMap [
            rr:parentTriplesMap tedm:Notice ;
        ]
    ];

    rr:predicateObjectMap [
        rr:predicate epo:hasElementModification ;
        rr:objectMap [
            rr:parentTriplesMap tedm:ElementModificationDescription
        ]
    ].

tedm:ElementModificationDescription a rr:TriplesMap ;
    rr:predicateObjectMap [
        rr:predicate epo:hasModificationJustification ;
        rr:objectMap [
            rml:reference "if(name()='ADDITIONAL_NEED') then 'http://publications.europa.eu/resource/authority/modification-justification/add-wss' else if(name()='UNFORESEEN_CIRCUMSTANCE') then 'http://publications.europa.eu/resource/authority/modification-justification/mod-cir' else null" ;
            rr:termType rr:IRI ;
        ]
    ];

    rr:predicateObjectMap [
        rr:predicate epo:hasModificationReasonDescription ;
        rr:objectMap [ rml:reference "P" ]
    ].
